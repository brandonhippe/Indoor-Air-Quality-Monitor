# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class SystemReadConfig(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        SystemReadConfig - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'cli_timeout': 'int',
            'location': 'str',
            'name': 'str'
        }

        self.attribute_map = {
            'cli_timeout': 'cliTimeout',
            'location': 'location',
            'name': 'name'
        }

        self._cli_timeout = None
        self._location = None
        self._name = None

    @property
    def cli_timeout(self):
        """
        Gets the cli_timeout of this SystemReadConfig.
        Time (in minutes) after which an inactive Manager CLI session is dropped. If cliTimeout is set to 0, sessions are not dropped for inactivity

        :return: The cli_timeout of this SystemReadConfig.
        :rtype: int
        """
        return self._cli_timeout

    @cli_timeout.setter
    def cli_timeout(self, cli_timeout):
        """
        Sets the cli_timeout of this SystemReadConfig.
        Time (in minutes) after which an inactive Manager CLI session is dropped. If cliTimeout is set to 0, sessions are not dropped for inactivity

        :param cli_timeout: The cli_timeout of this SystemReadConfig.
        :type: int
        """
        self._cli_timeout = cli_timeout

    @property
    def location(self):
        """
        Gets the location of this SystemReadConfig.
        Location of the network manager

        :return: The location of this SystemReadConfig.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """
        Sets the location of this SystemReadConfig.
        Location of the network manager

        :param location: The location of this SystemReadConfig.
        :type: str
        """
        self._location = location

    @property
    def name(self):
        """
        Gets the name of this SystemReadConfig.
        Name of the network manager

        :return: The name of this SystemReadConfig.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this SystemReadConfig.
        Name of the network manager

        :param name: The name of this SystemReadConfig.
        :type: str
        """
        self._name = name

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

